@using OsosOracle.Framework.HtmlHelpers
@using OsosOracle.MvcUI.Infrastructure
@using OsosOracle.MvcUI.Resources
@using OsosOracle.MvcUI.Models.ENTABONEModels
@using OsosOracle.MvcUI.Models.ENTABONESAYACModels
@model OsosOracle.MvcUI.Models.ENTABONEModels.AboneBilgileriModel

@section panelHeading{
    @if (!string.IsNullOrEmpty(Model.ReturnUrl))
    {
        <a href="@Model.ReturnUrl" class="btn btn-circle red-pink"><i class="fa fa-mail-reply"></i> Geri Dön</a>
    }
    <a id="btnKartBosalt" class="btn btn-xs btn-info"> <i class="fa fa-plus"></i>  @Dil.KartBosalt </a>
    <a id="btnKartTipi" class="btn btn-xs btn-warning"> <i class="fa fa-plus"></i>  @Dil.KartTipi </a>
}

@{Html.RenderAction("AboneGenelPartial", "EntAbone", new AboneGenelPartialModel
    {
        AboneKayitNo = Model.AboneDetay.KAYITNO,
        ReturnUrl = Url.Action("AboneTumBilgileri", "EntAbone", new { AboneKayitno = Model.AboneDetay.KAYITNO, activeTab = "tabSayac" })
    });
}

<div class="tabbable-custom">
    <ul class="nav nav-tabs nav-justified">
        <li class="active">
            <a href="#tabSu" data-toggle="tab">Su Sayacı </a>
        </li>
        <li>
            <a href="#tabKalorimetre" aria-controls="tabKalorimetre" role="tab" data-toggle="tab">Kalorimetre Sayacı</a>
        </li>
        <li>
            <a href="#tabSatis" aria-controls="tabSatis" role="tab" data-toggle="tab">Satış</a>
        </li>
        <li>
            <a href="#tabSokulenSayac" aria-controls="tabSokulenSayac" role="tab" data-toggle="tab">Sökülen Sayaç</a>
        </li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="tabSu">
            @{
                Html.RenderAction("SuPartial", "AboneSayac",
                         new PartialModel
                         {
                             AboneKayitNo = Model.AboneDetay.KAYITNO,
                             ReturnUrl = Url.Action("AboneTumBilgileri", "EntAbone", new { AboneKayitno = Model.AboneDetay.KAYITNO, activeTab = "tabSu", returnUrl = Model.ReturnUrl }),
                             YeniKayitBtnVisible = true,
                             GuncelleBtnVisible = true,
                             SilBtnVisible = true

                         });


            }
        </div>
        <div class="tab-pane" id="tabKalorimetre">
            <div data-url="@Url.Action("KalorimetrePartial", "AboneSayac",
                                     new PartialModel
                                     {
                                         AboneKayitNo = Model.AboneDetay.KAYITNO,
                                         ReturnUrl = Url.Action("AboneTumBilgileri", "EntAbone", new {AboneKayitno = Model.AboneDetay.KAYITNO, activeTab = "tabKalorimetre",returnUrl=Model.ReturnUrl}),
                                         YeniKayitBtnVisible = true,
                                         GuncelleBtnVisible = true,
                                         SilBtnVisible = true

                                     })">

            </div>
        </div>
        <div class="tab-pane" id="tabSatis">
            <div data-url="@Url.Action("SatisPartial", "Satis",
                                     new PartialModel
                                     {
                                         AboneKayitNo = Model.AboneDetay.KAYITNO,
                                         ReturnUrl = Url.Action("AboneTumBilgileri", "EntAbone", new {personelId = Model.AboneDetay.KAYITNO, activeTab = "tabSatis",returnUrl=Model.ReturnUrl}),
                                         YeniKayitBtnVisible = true,
                                         GuncelleBtnVisible = true,
                                         SilBtnVisible = true

                                     })">

            </div>
        </div>
        <div class="tab-pane" id="tabSokulenSayac">
            <div data-url="@Url.Action("SokulenSayacPartial", "AboneSayac",
                                     new PartialModel
                                     {
                                         AboneKayitNo = Model.AboneDetay.KAYITNO,
                                         ReturnUrl = Url.Action("AboneTumBilgileri", "EntAbone", new {personelId = Model.AboneDetay.KAYITNO, activeTab = "tabSatis",returnUrl=Model.ReturnUrl}),
                                         YeniKayitBtnVisible = true,
                                         GuncelleBtnVisible = true,
                                         SilBtnVisible = true

                                     })">

            </div>
        </div>
    </div>
</div>



@section script{
    <script type="text/javascript">
        $(document).ready(function () {

            
        $("#btnKartBosalt").click(function (e) {
            KartBosalt();
        });
         $("#btnKartTipi").click(function (e) {
            KartTipi();
        });

            $('a[data-toggle="tab"]').on('show.bs.tab',
                function (e) {
                    var tab = $(e.target.attributes.href.nodeValue);
                    //$(tab).load(tab.data('url'));
                    //$(tab).load(degisken[0].dataset.url);
                    var degisken = $(e.target.attributes.href.nodeValue + ' div[data-url]');
                    $.each(degisken, function (index, value) {
                        $(value).load(value.dataset.url);
                    });
                });

            if (GetQueryStringParams("activeTab") !== undefined) {
                window.location.hash = GetQueryStringParams("activeTab");
            }
            //url de # ile tab belirtildiyse gösterimini sağlar
            $('ul.nav.nav-tabs a:first').tab('show'); // Select first tab
            $('ul.nav.nav-tabs a[href="' + window.location.hash + '"]')
                .tab('show'); // Select tab by name if provided in location hash
            //$('ul.nav.nav-tabs a[data-toggle="tab"]').on('shown',
            //    function (event) { // Update the location hash to current tab
            //        window.location.hash = event.target.hash;
            //    });


        });

        function GetQueryStringParams(sParam) {
            var sPageURL = window.location.search.substring(1);
            var sURLVariables = sPageURL.split('&');

            for (var i = 0; i < sURLVariables.length; i++) {
                var sParameterName = sURLVariables[i].split('=');
                if (sParameterName[0] == sParam) {
                    return sParameterName[1];
                }
            }
        }

        function KartBosalt() {

        try
        {

            var elektrik = new ActiveXObject("SmartCard.OrtakAvm");
                var kartTip = elektrik.KartTipi();

            if (kartTip == "Abone Karti" || kartTip == "Abone Kartı" || kartTip=="CBA ") {
                var result = elektrik.AboneBosalt();
                if (result === "1") {
                    ajaxMesajGoster('İşlem Başarılı');
                } else {
                    ajaxMesajGoster('İşlem Başarısız', 'Hata');
                }
                return;
            } else if (kartTip == "Bos Kart") {
                ajaxMesajGoster('Kart Boş');
            }

            }
            catch(ex)
            {
                ajaxMesajGoster(ex, 'Hata');
            }

    }

    function KartTipi()
    {

        try
        {

            var su = new ActiveXObject("SmartCard.Mercan");
            var kartTip = su.KartTipi();
            ajaxMesajGoster(kartTip);
        }
        catch(ex)
        {
                var kalorimetre = new ActiveXObject("SmartCard.OrtakAvm");
                var kartTip = kalorimetre.KartTipi();
                ajaxMesajGoster(kartTip);
               
        }

        }

        function KartHazirla(aboneKayitNo) {
                try {


                    var request = $.ajax({
                                           url: "@Url.Action("Tarife", "Abone")",
                                           method: "POST",
                                           async: true,
                                           dataType: "json",
                                           data: { aboneKayitNo: aboneKayitNo }
                                         });
                                          request.done(function (jqXHR) {

                                              //Tarife Bilgileri geldi

                                              if (jqXHR.EntSayacDetay.SayacTipi == "AS20") {
                                                  var su = new ActiveXObject("SmartCard.KartIslem");
                                                  var result = su.AboneYap(jqXHR.EntSayacDetay.SERINO,
                                                      1,
                                                      jqXHR.PRMTARIFESU.LIMIT1,
                                                      jqXHR.PRMTARIFESU.LIMIT2,
                                                      jqXHR.PRMTARIFESU.FIYAT1,
                                                      jqXHR.PRMTARIFESU.FIYAT2,
                                                      jqXHR.PRMTARIFESU.FIYAT3,
                                                      jqXHR.PRMTARIFESU.FIYAT4,
                                                      jqXHR.PRMTARIFESU.FIYAT4,
                                                      jqXHR.PRMTARIFESU.FIYAT4,
                                                      jqXHR.PRMTARIFESU.FIYAT4

                                                  );
                                                  if (result === "1") {
                                                      ajaxMesajGoster('İşlem Başarılı');
                                                  } else {
                                                      ajaxMesajGoster('İşlem Başarısız', 'Hata');
                                                  }
                                              }
                                              else if (jqXHR.EntSayacDetay.SayacTipi == "Mercan" || jqXHR.EntSayacDetay.SayacTipi == "AS20" || jqXHR.EntSayacDetay.SayacTipi == "AS25") {
                                                  var su = new ActiveXObject("SmartCard.Mercan");
                                                  var result = su.AboneYap(jqXHR.EntSayacDetay.SERINO,
                                                      jqXHR.ENTABONE.ABONENO,
                                                      1,
                                                      jqXHR.PRMTARIFESU.SAYACCAP,
                                                      1,
                                                      jqXHR.PRMTARIFESU.DONEMGUN,
                                                      jqXHR.PRMTARIFESU.FIYAT1,
                                                      jqXHR.PRMTARIFESU.FIYAT2,
                                                      jqXHR.PRMTARIFESU.FIYAT3,
                                                      jqXHR.PRMTARIFESU.FIYAT4,
                                                      jqXHR.PRMTARIFESU.FIYAT5,
                                                      jqXHR.PRMTARIFESU.LIMIT1,
                                                      jqXHR.PRMTARIFESU.LIMIT2,
                                                      jqXHR.PRMTARIFESU.LIMIT3,
                                                      jqXHR.PRMTARIFESU.LIMIT4,
                                                      jqXHR.PRMTARIFESU.BAYRAM1GUN,
                                                      jqXHR.PRMTARIFESU.BAYRAM1AY,
                                                      jqXHR.PRMTARIFESU.BAYRAM1SURE,
                                                      jqXHR.PRMTARIFESU.BAYRAM2GUN,
                                                      jqXHR.PRMTARIFESU.BAYRAM2AY,
                                                      jqXHR.PRMTARIFESU.BAYRAM2SURE,
                                                      jqXHR.PRMTARIFESU.AVANSONAY,
                                                      1,
                                                      jqXHR.PRMTARIFESU.YANGINMODSURE,
                                                      jqXHR.PRMTARIFESU.MAXDEBI,
                                                      jqXHR.PRMTARIFESU.KRITIKKREDI,
                                                      jqXHR.PRMTARIFESU.BAGLANTIPERIYOT


                                                  );
                                                  if (result === "1") {
                                                      ajaxMesajGoster('İşlem Başarılı');
                                                  } else {
                                                      ajaxMesajGoster('İşlem Başarısız', 'Hata');
                                                  }
                                              } else if (jqXHR.EntSayacDetay.SayacTipi == "Kalorimetre") {
                                                  var kalorimetre = new ActiveXObject("SmartCard.OrtakAvm");
                                                  var result = kalorimetre.AboneYap(jqXHR.EntSayacDetay.SERINO,
                                                      1,
                                                      jqXHR.PrmTarifeOrtakAvm.LIMIT1,
                                                      jqXHR.PrmTarifeOrtakAvm.LIMIT2,
                                                      jqXHR.PrmTarifeOrtakAvm.FIYAT1,
                                                      jqXHR.PrmTarifeOrtakAvm.FIYAT2,
                                                      jqXHR.PrmTarifeOrtakAvm.FIYAT3,
                                                      jqXHR.PrmTarifeOrtakAvm.FIYAT4,
                                                      jqXHR.PrmTarifeOrtakAvm.FIYAT4,
                                                      jqXHR.PrmTarifeOrtakAvm.FIYAT4,
                                                      jqXHR.PrmTarifeOrtakAvm.FIYAT4


                                                  );
                                                  if (result === "1") {
                                                      ajaxMesajGoster('İşlem Başarılı');
                                                  } else {
                                                      ajaxMesajGoster('İşlem Başarısız', 'Hata');
                                                  }

                                              } else if (jqXHR.EntSayacDetay.SayacTipi == "Elektrik A5") {
                                                  var elektrik = new ActiveXObject("SmartCard.SayacTurleri.ElektrikTr");
                                                  var result = elektrik.AboneYap(jqXHR.ENTSAYAC.SERINO,
                                                      jqXHR.PRMTARIFEELK.FIYAT1,
                                                      jqXHR.PRMTARIFEELK.FIYAT2,
                                                      jqXHR.PRMTARIFEELK.FIYAT3,
                                                      jqXHR.PRMTARIFEELK.LIMIT1,
                                                      jqXHR.PRMTARIFEELK.LIMIT2,
                                                      jqXHR.PRMTARIFEELK.YUKLEMELIMIT,
                                                      jqXHR.PRMTARIFEELK.AKSAMSAAT,
                                                      jqXHR.PRMTARIFEELK.SABAHSAAT,
                                                      jqXHR.PRMTARIFEELK.HAFTASONUAKSAM,
                                                      jqXHR.PRMTARIFEELK.SABITUCRET,
                                                      jqXHR.PRMTARIFEELK.BAYRAM1GUN,
                                                      jqXHR.PRMTARIFEELK.BAYRAM1AY,
                                                      jqXHR.PRMTARIFEELK.BAYRAM1SURE,
                                                      jqXHR.PRMTARIFEELK.BAYRAM2GUN,
                                                      jqXHR.PRMTARIFEELK.BAYRAM2AY,
                                                      jqXHR.PRMTARIFEELK.BAYRAM2SURE,
                                                      jqXHR.PRMTARIFEELK.KRITIKKREDI

                                                  );
                                                  if (result === "1") {
                                                      ajaxMesajGoster('İşlem Başarılı');
                                                  } else {
                                                      ajaxMesajGoster('İşlem Başarısız', 'Hata');
                                                  }
                                              }




                                          });
                                         request.fail(function (jqXHR, textStatus) {
                                             unblockUI();
                                             var msg = jQuery.parseJSON(jqXHR.responseText);
                                             ajaxMesajGoster(msg.Mesaj);
                                         });


                } catch (e) {
                    console.log(e);
                }

    }



    </script>
}

<style>
    .nav-justified > li:hover {
        background-color: #ddd;
    }


    .nav-justified > li {
    }
</style>

